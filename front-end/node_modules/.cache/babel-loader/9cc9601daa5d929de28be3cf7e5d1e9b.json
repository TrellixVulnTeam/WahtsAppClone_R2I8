{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chao\\\\Desktop\\\\project\\\\whatsapp-clone\\\\front-end\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport Chat from './Chat/Chat';\nimport SideBar from './SideBar/SideBar';\nimport Pusher from \"pusher-js\";\nimport axios from \"./axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    axios.get(\"/messages/sync\").then(response => {\n      setMessages(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    const pusher = new Pusher('739310b287ee5fb66200', {\n      cluster: 'us3'\n    });\n    const channel = pusher.subscribe('message');\n    channel.bind('inserted', newMessage => {\n      // alert(JSON.stringify(newMessage));\n      setMessages([...messages, newMessage]);\n    });\n    return () => {\n      channel.unbind_all();\n      channel.unsubscribe();\n    };\n  }, [messages]);\n  console.log(messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chat, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"BxyhfWWpnSbijcu7qFgrB+X/mWM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Chao/Desktop/project/whatsapp-clone/front-end/src/App.jsx"],"names":["React","useEffect","useState","Chat","SideBar","Pusher","axios","App","messages","setMessages","get","then","response","data","pusher","cluster","channel","subscribe","bind","newMessage","unbind_all","unsubscribe","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA4C,OAA5C;AACA,OAAO,YAAP;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAGb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEdK,IAAAA,KAAK,CAACI,GAAN,CAAU,gBAAV,EAA4BC,IAA5B,CAAkCC,QAAD,IAAc;AAC3CH,MAAAA,WAAW,CAACG,QAAQ,CAACC,IAAV,CAAX;AACD,KAFH;AAID,GANQ,EAMN,EANM,CAAT;AAUAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,MAAM,GAAG,IAAIT,MAAJ,CAAW,sBAAX,EAAmC;AAChDU,MAAAA,OAAO,EAAE;AADuC,KAAnC,CAAf;AAIA,UAAMC,OAAO,GAAGF,MAAM,CAACG,SAAP,CAAiB,SAAjB,CAAhB;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAa,UAAb,EAA0BC,UAAD,IAAgB;AACvC;AACAV,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcW,UAAd,CAAD,CAAX;AACD,KAHD;AAKA,WAAO,MAAM;AACXH,MAAAA,OAAO,CAACI,UAAR;AACAJ,MAAAA,OAAO,CAACK,WAAR;AACD,KAHD;AAID,GAfQ,EAeN,CAACb,QAAD,CAfM,CAAT;AAkBAc,EAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAIA;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA5CQD,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState  } from 'react';\nimport './App.scss';\nimport Chat from './Chat/Chat';\nimport SideBar from './SideBar/SideBar';\nimport Pusher from \"pusher-js\";\nimport axios from \"./axios\"\n\nfunction App() {\n\n\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n\n    axios.get(\"/messages/sync\").then((response) => {\n        setMessages(response.data);\n      })\n    \n  }, []);\n\n\n\n  useEffect(() => {\n    const pusher = new Pusher('739310b287ee5fb66200', {\n      cluster: 'us3'\n    });\n\n    const channel = pusher.subscribe('message');\n    channel.bind('inserted', (newMessage) => {\n      // alert(JSON.stringify(newMessage));\n      setMessages([...messages, newMessage])\n    });\n\n    return () => {\n      channel.unbind_all();\n      channel.unsubscribe();\n    }\n  }, [messages]);\n\n\n  console.log(messages);\n\n  return (\n    <div className=\"App\">\n      <div className=\"body\">\n        <SideBar />\n        <Chat messages = {messages}/>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}